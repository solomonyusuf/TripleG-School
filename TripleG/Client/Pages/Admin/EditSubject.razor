@page "/edit/subject/{studentId}/{resultId}/{subjectId}"
@inject NavigationManager route
@using System.Text
@using TripleG.Shared.Models
@inject HttpClient http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize(Roles ="Admin,Teacher")]


<div>
    <div class="card">
        <div class="card-body" style="margin:40px;">
            <EditForm Model="subject" OnValidSubmit="PostSubject">
                <h2 class="text-center" style="color: var(--bs-blue);">Edit Subjects</h2>
                <div class="mb-3"><InputText @bind-Value="subject.Name" class="form-control" type="text" name="Name" placeholder="Enter Subject Name" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.FirstTest" class="form-control" type="text" name="FirstTest" placeholder="First Test" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.SecondTest" class="form-control" type="text" name="SecondTest" placeholder="Second Test" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.ExamScore" class="form-control" type="text" name="ExamScore" placeholder="ExamScore" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.Total" class="form-control" type="text" name="Percentage" placeholder="Total" /></div>
                @*  <div class="mb-3"><InputText @bind-Value="subject.Grade" class="form-control" type="text" name="Grade" placeholder="Grade" /></div>*@
                <div class="mb-3"></div>
                <div class="mb-3"></div>
               <div class="mb-3"><button class="btn btn-primary text-center align-self-center w-100" type="submit" style="text-align: center;margin: 15px;">Submit</button></div>
            </EditForm>

           
        </div>
    </div>
</div>



@code {
    [Parameter]
    public string studentId { get; set; }
    [Parameter]
    public string resultId { get; set; }
    [Parameter]
    public string subjectId { get; set; }
    public bool load{ get; set; }
    public Subject subject = new();
    public StudentHub studentHub = new();
    //

    protected override async Task OnInitializedAsync()
    {
        this.subject = await this.http.GetFromJsonAsync<Subject>("api/Subject/" + this.subjectId);
    }




    private async Task PostSubject()
    {
        try
        {
            this.load = true;
            var res = await this.http.PutAsJsonAsync("api/Subject/"+ this.subjectId, subject);
            var a = await res.Content.ReadFromJsonAsync<Subject>();
            var student = await this.http.GetFromJsonAsync<Student>("api/student/" + this.studentId);
            var Result = await this.http.GetFromJsonAsync<Result>("api/Result/" + this.resultId);
            //Result.ResultId,student.StudentId,a.SubjectId,a.Name, a.FirstTest, a.SecondTest, a.ExamScore, a.Total, a.Grade
            await SaveSubject(res);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }


    private async Task SaveSubject( HttpResponseMessage res)
    {
        try
        {   
            //var req = new StudentHub { StudentId=studentId,ResultId = resultId, SubjectId = subjectId, Name = name, FirstTest = ftest, SecondTest = stest, ExamScore = escore, Total = total, Grade = grade };

            var req = await this.http.PutAsJsonAsync("api/StudentHub/" + this.subjectId, res);
            this.route.NavigateTo($"/result/detail/{this.studentId}/{this.resultId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
         
        }
    }



}














