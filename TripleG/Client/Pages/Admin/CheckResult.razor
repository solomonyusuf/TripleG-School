@layout SecondLayout_
@page "/check/result/{studentId}/{resultId}"
@inject NavigationManager route
@using TripleG.Shared.Models
@inject HttpClient http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize(Roles ="Admin,Teacher,User")]



<div>
    <div class="card " style="border-width: 3px;border-style: solid;">
        <div class="card-body">
            <div class="card-title" align="center">
            <h2><i>TRIPLE "G" PRIVATE SCHOOLS.</i></h2><br>
            <small><i>1, Egunjobi street, off oremeji bus-stop,shasha,Lagos.(Esther Osakwe - 08032255795)</i></small></div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr></tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="color: var(--bs-indigo);font-size: 20px;font-weight: bold;font-style: italic;">@student.FirstName&nbsp;@student.LastName</td>
                                        <td style="font-weight:bolder;">@student.Sex</td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight:bolder;">@result.Class</td>
                                        <td style="font-style:italic;"><strong>@student.StudentId</strong></td>
                                    </tr>
                                    <br />

                                </tbody>
                            </table>
                        </div><label class="form-label"></label>
                    </div>
                    <div class="col-md-6">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr></tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="font-weight:bolder;">@parent.PhoneNumber_1<br></td>
                                        <td style="font-weight:bolder;">@parent.Address_1</td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight:bolder;">@parent.Email</td>
                                        <td style="font-weight:bolder;">@parent.City</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="table-responsive">
                            <table class="table">

                                <tbody>
                                    <tr>
                                        <td style="font-weight:bolder;">@result.Session&nbsp;Session</td>
                                        <td style="font-weight:bolder;">@result.Term&nbsp;Term</td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight:bolder;">@result.Position&nbsp;Position</td>
                                        <td style="font-weight:bolder;">@result.Percentage&nbsp;%</td>
                                    </tr>
  
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-12" style="border-width: 3px;border-style: solid;">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th style="text-align: center;">Subjects</th>
                                        <th style="text-align: center;">1st Test</th>
                                        <th style="text-align: center;">2nd Test</th>
                                        <th style="text-align: center;">Exam</th>
                                        <th style="text-align: center;">Total</th>
                                        <th style="text-align: center;">Grade</th>
                                    </tr>
                                </thead>

                                <tbody>

                                    @foreach (var subject in studenthub)
                                    {
                                        <tr>                                   
                                           <td class="subjects" style="text-align: center;font-weight: bold;font-style: italic;"><i>@subject.Name</i></td>
                                            <td class="report" style="text-align: center;">@subject.FirstTest</td>
                                            <td class="report" style="text-align: center;">@subject.SecondTest</td>
                                            <td class="report" style="text-align: center;">@subject.ExamScore</td>
                                            <td class="report" style="text-align: center;">@subject.Total</td>
                                            <td class="report" style="font-weight: bold;font-style: italic;text-align: center;">@subject.Grade</td>                                            
                                        </tr>

                                        }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container" style="box-shadow: 0px 0px;">
                <div class="row">
                    <div class="col-md-12" style="filter: brightness(68%) hue-rotate(27deg);">
                        <p style="font-weight: bold;font-style: italic;font-size: 20px;">Authority's Remarks</p>
                        <div class="card">
                            <div class="card-body" style="background: var(--bs-body-bg);">
                                <h4 class="card-title"></h4>
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
            </div>
        </div><br />
    </div>
</div>

@code {
    [Parameter]
    public string studentId { get; set; }
    [Parameter]
    public string resultId { get; set; }
    public Student student = new();
    public List<StudentHub> studenthub = new ();
    public Result result = new();
    public ParentInfo parent = new();
    public Subject subject = new();
    public List<Subject> subjects = new();
    public enum Class
    {
        DISCOVERY,
        NURSERY_1,
        NURSERY_2,
        BASIC_1,
        BASIC_2,
        BASIC_3,
        BASIC_4,
        BASIC_5,
        BASIC_6,
        JSS1,
        JSS2,
        JSS3,
        SS1,
        SS2,
        SS3
    }

    protected override async Task OnInitializedAsync()
    {
        await this.GetStudent();
        await this.GetResult();
    }




    private async Task GetStudent()
    {
        try
        {
            var res = await this.http.GetFromJsonAsync<Student>("api/student/" + this.studentId);
            await GetParent(res.ParentId);
            this.student = res;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    private async Task GetParent(string ID)
    {
        try
        {
            var res = await this.http.GetFromJsonAsync<ParentInfo>("api/Parent/" + ID);
            this.parent = res;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }



    private async Task GetResult()
    {
        try
        {
            var res = await this.http.GetFromJsonAsync<Result>("api/Result/" + this.resultId);
            await init(this.resultId);
            this.result = res;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

     private async Task Delete(Guid id)
    {
        try
        {
            var response = await this.http.DeleteAsync("api/StudentHub/" + id);
            await this.GetStudent();
            await this.GetResult();

        }catch(Exception ex){
            Console.WriteLine(ex);
        }
    }



    private async Task init(string id)
    {
        var res = await this.http.GetFromJsonAsync<List<StudentHub>>("api/StudentHub");
        var init = res.Where(s =>s.ResultId.ToString().ToLower() == id.ToLower()).ToList();
        studenthub = init;
    }     
    
       
       
       
}

